/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "demo/app/excelZUIExcel/Component-preload",
	"modules": {
		"demo/app/excelZUIExcel/view/Main.view.xml": "<mvc:View controllerName=\"demo.app.excelZUIExcel.controller.Main\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:u=\"sap.ui.unified\" displayBlock=\"true\" xmlns=\"sap.m\" xmlns:smartFilterBar=\"sap.ui.comp.smartfilterbar\" xmlns:core=\"sap.ui.core\">\n\t<App>\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\">\n\t\t\t\t<!--<customHeader>-->\n\t\t\t\t<!--\t<Bar>-->\n\t\t\t\t<!--\t\t<contentMiddle>-->\n\t\t\t\t<!--\t\t\t<Label text=\"Read Data From Excel\"/>-->\n\t\t\t\t<!--\t\t</contentMiddle>-->\n\t\t\t\t<!--\t\t<contentRight>-->\n\t\t\t\t<!--\t\t\t<u:FileUploader id=\"FileUploaderId\" sameFilenameAllowed=\"true\" iconOnly=\"false\" buttonOnly=\"true\" fileType=\"XLSX,xlsx\"-->\n\t\t\t\t<!--\t\t\t\ticon=\"sap-icon://upload\" iconFirst=\"true\" style=\"Emphasized\" change=\"onUpload\"/>-->\n\t\t\t\t<!--\t\t</contentRight>-->\n\t\t\t\t<!--\t</Bar>-->\n\t\t\t\t<!--</customHeader>-->\n\t\t\t\t<content>\n\t\t\t\t\t<smartFilterBar:SmartFilterBar id=\"smartFilterBar\" entitySet=\"CollectorSet\" search=\"onFilterSearch\">\n\t\t\t\t\t\t<smartFilterBar:controlConfiguration>\n\t\t\t\t\t\t\t<smartFilterBar:ControlConfiguration key=\"Material\" index=\"1\" label=\"Material\" groupId=\"_BASIC\" width=\"300px\"\n\t\t\t\t\t\t\t\tvisibleInAdvancedArea=\"true\">\n\t\t\t\t\t\t\t\t<smartFilterBar:customControl>\n\t\t\t\t\t\t\t\t\t<Input id=\"Material\" showValueHelp=\"true\" \n\t\t\t\t\t\t\t\t\tvalueHelpRequest=\"onValueHelp\"></Input>\n\t\t\t\t\t\t\t\t</smartFilterBar:customControl>\n\t\t\t\t\t\t\t</smartFilterBar:ControlConfiguration>\n\t\t\t\t\t\t\t<smartFilterBar:ControlConfiguration key=\"Location\" index=\"2\" label=\"Location\" groupId=\"_BASIC\" width=\"300px\"\n\t\t\t\t\t\t\t\tvisibleInAdvancedArea=\"true\">\n\t\t\t\t\t\t\t\t<smartFilterBar:customControl>\n\t\t\t\t\t\t\t\t\t<Input id=\"Location\" showValueHelp=\"true\" \n\t\t\t\t\t\t\t\t\tvalueHelpRequest=\"onValueHelp\"></Input>\n\t\t\t\t\t\t\t\t</smartFilterBar:customControl>\n\t\t\t\t\t\t\t</smartFilterBar:ControlConfiguration>\n\t\t\t\t\t\t\t<smartFilterBar:ControlConfiguration key=\"Validated\" filterType=\"single\"/>\n\t\t\t\t\t\t</smartFilterBar:controlConfiguration>\n\t\t\t\t\t\t<!-- layout data used to make the table growing but the filter bar fixed -->\n\t\t\t\t\t\t<smartFilterBar:layoutData>\n\t\t\t\t\t\t\t<FlexItemData shrinkFactor=\"0\"/>\n\t\t\t\t\t\t</smartFilterBar:layoutData>\n\t\t\t\t\t</smartFilterBar:SmartFilterBar>\n\t\t\t\t\t<Table id=\"idTable\" width=\"auto\" class=\"sapUiResponsiveMargin\" noDataText=\"{worklistView>/tableNoDataText}\" \n\t\t\t\t\t\titems=\"{path : 'local>/data', filters: [{path: 'Units', operator: 'NE', value1: 'D'}]}\">\n\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t<Title id=\"idTopTitle\" text=\"Upload Data\"/>\n\t\t\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t\t\t<!--<SearchField width=\"30%\" search=\"onSearch\" placeholder=\"enter location\"></SearchField>-->\n\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://add\" press=\"onAdd\"></Button>\n\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://excel-attachment\" press=\"onAddExcelData\"></Button>\n\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t<Column id=\"idTopName\">\n\t\t\t\t\t\t\t\t<Text text=\"Location\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idBrand\">\n\t\t\t\t\t\t\t\t<Text text=\"Cost Collector\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idPrice\">\n\t\t\t\t\t\t\t\t<Text text=\"Materials\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idEndDate\">\n\t\t\t\t\t\t\t\t<Text text=\"End Date\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idQuantity\">\n\t\t\t\t\t\t\t\t<Text text=\"Quantity\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idCost\">\n\t\t\t\t\t\t\t\t<Text text=\"Cost\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idLaborCost\">\n\t\t\t\t\t\t\t\t<Text text=\"Labor Cost\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idEmissionCost\">\n\t\t\t\t\t\t\t\t<Text text=\"Emission Cost\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idAvgCost\">\n\t\t\t\t\t\t\t\t<Text text=\"Average Cost\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t<Column id=\"idbtns\">\n\t\t\t\t\t\t\t\t<Text text=\"Options\"/>\n\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Location}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Collector}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Material}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{path : 'local>Enddate', formatter: '.formatter.getSAPFormattedDate'}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Quantity}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Cost}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Laborcost}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Emissioncost}\"></Text>\n\t\t\t\t\t\t\t\t\t<Text text=\"{local>Avgcost}\"></Text>\n\t\t\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t\t\t<Button icon=\"sap-icon://edit\" press=\"onEdit\"></Button>\n\t\t\t\t\t\t\t\t\t\t<Button class=\"sapUiTinyMarginBegin\" icon=\"sap-icon://delete\" press=\"onDelete\"></Button>\n\t\t\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t</items>\n\t\t\t\t\t</Table>\n\t\t\t\t</content>\n\t\t\t\t<footer>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<Button text=\"Save\" press=\"onSave\"></Button>\n\t\t\t\t\t\t<Button text=\"Cancel\" press=\"onCancel\"></Button>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</footer>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"demo/app/excelZUIExcel/model/formatter.js": "sap.ui.define([],\r\n\tfunction() {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tstatusText: function(num) {\r\n\t\t\t\tvar text = {\r\n\t\t\t\t\t\"0\": \"Draft\",\r\n\t\t\t\t\t\"1\": \"Submitted\",\r\n\t\t\t\t\t\"2\": \"Approved\",\r\n\t\t\t\t\t\"3\": \"Rejected\"\r\n\t\t\t\t};\r\n\t\t\t\treturn num === \"\" ? text[\"0\"] : text[num];\r\n\t\t\t},\r\n\t\t\tconvertPDFToUrl: function(vContent){\r\n\t\t\t\tvar decodedPdfContent = atob(vContent.replace(\"data:application/pdf;base64,\",\"\"));\r\n\t\t\t\tvar byteArray = new Uint8Array(decodedPdfContent.length);\r\n\t\t\t\tfor(var i=0; i<decodedPdfContent.length; i++){\r\n\t\t\t\t    byteArray[i] = decodedPdfContent.charCodeAt(i);\r\n\t\t\t\t}\r\n\t\t\t\tvar blob = new Blob([byteArray.buffer], { type: 'application/pdf' });\r\n\t\t\t\tjQuery.sap.addUrlWhitelist(\"blob\");\r\n\t\t\t\treturn URL.createObjectURL(blob);\r\n\t\t\t},\r\n\t\t\tstatusState: function(num) {\r\n\t\t\t\tvar state = {\r\n\t\t\t\t\t\"\": sap.ui.core.ValueState.Information,\r\n\t\t\t\t\t\"0\": sap.ui.core.ValueState.Success,\r\n\t\t\t\t\t\"1\": sap.ui.core.ValueState.Success,\r\n\t\t\t\t\t\"2\": sap.ui.core.ValueState.Success,\r\n\t\t\t\t\t\"3\": sap.ui.core.ValueState.Error\r\n\t\t\t\t};\r\n\t\t\t\treturn state[num];\r\n\t\t\t},\r\n\t\t\tgetFormattedDate: function(monthInc) {\r\n\t\t\t\tvar dateObj = new Date();\r\n\t\t\t\tdateObj.setDate(dateObj.getDate());\r\n\t\t\t\tvar dd = dateObj.getDate();\r\n\t\t\t\tdateObj.setMonth(dateObj.getMonth() + monthInc);\r\n\t\t\t\tvar mm = dateObj.getMonth() + 1;\r\n\t\t\t\tvar yyyy = dateObj.getFullYear();\r\n\t\t\t\tif (dd < 10) {\r\n\t\t\t\t\tdd = '0' + dd;\r\n\t\t\t\t}\r\n\t\t\t\tif (mm < 10) {\r\n\t\t\t\t\tmm = '0' + mm;\r\n\t\t\t\t}\r\n\t\t\t\treturn  mm + '/' + dd + '/' + yyyy;\r\n\t\t\t},\r\n\t\t\tgetSAPFormattedDate: function(newDate) {\r\n\t\t\t\t\r\n\t\t\t\tif(newDate){\r\n\t\t\t\t\t//var dateObj = newDate;\r\n\t\t\t\t\tvar dateObj = new Date(newDate);\r\n\t\t\t\t\tdateObj.setDate(dateObj.getDate());\r\n\t\t\t\t\tvar dd = dateObj.getDate();\r\n\t\t\t\t\tdateObj.setMonth(dateObj.getMonth());\r\n\t\t\t\t\tvar mm = dateObj.getMonth() + 1;\r\n\t\t\t\t\tvar yyyy = dateObj.getFullYear();\r\n\t\t\t\t\tif (dd < 10) {\r\n\t\t\t\t\t\tdd = '0' + dd;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (mm < 10) {\r\n\t\t\t\t\t\tmm = '0' + mm;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn  mm + '/' + dd + '/' + yyyy;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tdisplaySAPDate: function(){\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tstatusIcon: function(num) {\r\n\t\t\t\tvar state = {\r\n\t\t\t\t\t\"\": \"sap-icon://edit\",\r\n\t\t\t\t\t\"0\": \"sap-icon://edit\",\r\n\t\t\t\t\t\"1\": \"sap-icon://message-success\",\r\n\t\t\t\t\t\"2\": \"sap-icon://message-success\",\r\n\t\t\t\t\t\"3\": \"sap-icon://message-error\"\r\n\t\t\t\t};\r\n\t\t\t\treturn state[num];\r\n\t\t\t},\r\n\t\t\tenabledItem: function(num) {\r\n\t\t\t\tif (num === \"\" || num === \"0\") {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tenabledWagetype: function(wagetype, status) {\r\n\t\t\t\tif (status === \"1\" || status === \"2\") {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (wagetype === \"2509\") {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tattachBtnText : function(attachment){\r\n\t\t\t\tif(attachment){\r\n\t\t\t\t\treturn attachment.length > 0 ? \"Attached\" : \"Attach\";\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn \"Attach\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tattachBtnType : function(attachment){\r\n\t\t\t\tif(attachment){\r\n\t\t\t\t\treturn attachment.length > 0 ? \"Accept\" : \"Reject\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn \"Reject\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n);",
		"demo/app/excelZUIExcel/controller/Main.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"sap/m/Dialog\",\n\t\"sap/ui/unified/FileUploader\",\n\t\"sap/m/MessageToast\",\n\t\"sap/m/MessageBox\",\n\t\"sap/ui/model/Filter\",\n\t\"demo/app/excelZUIExcel/model/formatter\"\n], function(Controller, JSONModel, History, Dialog, FileUploader, MessageToast, MessageBox, Filter, formatter) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"demo.app.excelZUIExcel.controller.Main\", {\n\t\tonInit: function(){\n\t\t\t\tvar oJson = new JSONModel();\n\t\t\t\toJson.setData({data: [],  newEntry: {\n\t\t\t\t\tGuid : \"\",\n\t\t\t\t\tLocation:\"\",\n\t\t\t\t\tCollector:\"\",\n\t\t\t\t\tMaterial:\"\",\n\t\t\t\t\tEnddate: new Date(),\n\t\t\t\t\tQuantity:0,\n\t\t\t\t\tCost:0,\n\t\t\t\t\tLaborcost:0,\n\t\t\t\t\tEmissioncost:0,\n\t\t\t\t\tAvgcost:0,\n\t\t\t\t\tUnits: \"\"\n\t\t\t\t}})\t\t;\n\t\t\t\tthis.getView().setModel(oJson,\"local\");\n\t\t\t\tthis.localModel = oJson;\n\t\t\t\tthis.oDataModel = this.getOwnerComponent().getModel();\n\t\t},\n\t\tformatter: formatter,\n\t\tupdateRecords : [],\n\t\tnewRecords: [],\n\t\tdeleteRecords: [],\n\t\tonLiveChange: function(){\n\t\t\tvar sValues = \tthis.localModel.getProperty(\"/newEntry\");\n\t\t\tif(sValues.Quantity <= 0 || !sValues.Quantity){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsValues.Avgcost = ( parseFloat(sValues.Cost) + parseFloat(sValues.Laborcost) + parseFloat(sValues.Emissioncost) ) / sValues.Quantity;\n\t\t\tvar newVal = parseFloat(sValues.Avgcost).toFixed(2);\n\t\t\tthis.localModel.setProperty(\"/newEntry/Avgcost\", newVal);\n\t\t},\n\t\tonCellChange: function(oEvent){\n\t\t\tvar currentRow = oEvent.getSource().getParent();\n\t\t\tvar quantity = currentRow.getCells()[4].getValue();\n\t\t\tvar cost = currentRow.getCells()[5].getValue();\n\t\t\tvar labor = currentRow.getCells()[6].getValue();\n\t\t\tvar emission = currentRow.getCells()[7].getValue();\n\t\t\tvar calcVal = parseFloat(cost) + parseFloat(labor) + parseFloat(emission);\n\t\t\tif(quantity <= 0 || !quantity){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar final = parseFloat(calcVal / quantity).toFixed(2);\n\t\t\tcurrentRow.getCells()[8].setText(final);\n\t\t},\n\t\tonCancel: function(){\n\t\t\tvar that = this;\n\t\t\tMessageBox.confirm(\"All the changes will be discarded?\", function(conf) {\n\t\t\t\tif (conf == 'OK') {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t}, \"Confirmation\");\t\n\t\t},\n\t\tinpField: \"\",\n\t\tonFilterSearch: function(){\n\t\t\tvar that = this;\n\t\t\t\n\t\t\tif(this.getView().byId(\"Material\").getValue() !== \"\"){\n\t\t\t\tthis.oDataModel.read(\"/MatCollAllSet\",{\n\t\t\t\t\tfilters: [new Filter(\"Material\", \"EQ\", this.getView().byId(\"Material\").getValue())],\n\t\t\t\t\tsuccess: function(data){\n\t\t\t\t\t\tthat.localModel.setProperty(\"/data\",data.results);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}else if (this.getView().byId(\"Location\").getValue() !== \"\"){\n\t\t\t\tthis.oDataModel.read(\"/MatCollAllSet\",{\n\t\t\t\t\tfilters: [new Filter(\"Location\", \"EQ\", this.getView().byId(\"Location\").getValue())],\n\t\t\t\t\tsuccess: function(data){\n\t\t\t\t\t\tthat.localModel.setProperty(\"/data\",data.results);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tthis.oDataModel.read(\"/MatCollAllSet\",{\n\t\t\t\t\tsuccess: function(data){\n\t\t\t\t\t\tconsole.log(data.results);\n\t\t\t\t\t\tthat.localModel.setProperty(\"/data\",data.results);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t},\n\t\tonSelectValue: function(oEvent){\n\t\t\t\tvar selectedItem = oEvent.getParameter(\"selectedItem\");\n\t\t\t\tvar sTitle = selectedItem.getLabel();\n\t\t\t\tsap.ui.getCore().byId(this.inpField).setValue(sTitle);\n\t\t\t\tvar that = this;\n\t\t\t\tif(this.inpField.indexOf(\"Material\") !== -1){\n\t\t\t\t\tthis.getView().byId(\"Location\").setValue(\"\");\n\t\t\t\t}else{\n\t\t\t\t\tthis.getView().byId(\"Material\").setValue(\"\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t},\n\t\tcityPopup: null,\n\t\tonValueHelp: function(oEvent){\n\t\t\tthis.inpField = oEvent.getSource().getId();\n\t\t\t//lo_alv->set_table_for_first_display\n\t\t\t//MessageBox.confirm(\"this functionality is under construction\");\n\t\t\tif(this.inpField.indexOf(\"Material\") !== -1){\n\t\t\t\tthis.cityPopup = sap.ui.xmlfragment(\"demo.app.excelZUIExcel.fragments.popup\", this);\t\n\t\t\t\tthis.cityPopup.bindAggregation(\"items\",{\n\t\t\t\t\tpath: \"/ValueHelpSet\",\n\t\t\t\t\tfilters: [new Filter(\"Key\", \"EQ\",\"M-\")],\n\t\t\t\t\ttemplate: new sap.m.DisplayListItem({\n\t\t\t\t\t\tlabel: \"{Key}\",\n\t\t\t\t\t\tvalue: \"{Text}\"\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis.cityPopup.setTitle(\"Materials\");\n\t\t\t\tthis.cityPopup.setMultiSelect(false);\n\t\t\t\tthis.getView().addDependent(this.cityPopup);\n\t\t\t\tthis.cityPopup.open();\n\t\t\t}else{\n\t\t\t\tthis.cityPopup = sap.ui.xmlfragment(\"demo.app.excelZUIExcel.fragments.popup\", this);\t\n\t\t\t\tthis.cityPopup.bindAggregation(\"items\",{\n\t\t\t\t\tpath: \"/ValueHelpSet\",\n\t\t\t\t\tfilters: [new Filter(\"Key\", \"EQ\",\"L-\")],\n\t\t\t\t\ttemplate: new sap.m.DisplayListItem({\n\t\t\t\t\t\tlabel: \"{Key}\",\n\t\t\t\t\t\tvalue: \"{Text}\"\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis.cityPopup.setTitle(\"Locations\");\n\t\t\t\tthis.cityPopup.setMultiSelect(false);\n\t\t\t\tthis.getView().addDependent(this.cityPopup);\n\t\t\t\tthis.cityPopup.open();\n\t\t\t}\n\t\t\t\n\t\t},\n\t\tgetFormattedDate: function(monthInc) {\n\t\t\tvar dateObj = new Date();\n\t\t\tdateObj.setDate(dateObj.getDate());\n\t\t\tvar dd = dateObj.getDate();\n\t\t\tdateObj.setMonth(dateObj.getMonth() + monthInc);\n\t\t\tvar mm = dateObj.getMonth() + 1;\n\t\t\tvar yyyy = dateObj.getFullYear();\n\t\t\tif (dd < 10) {\n\t\t\t\tdd = '0' + dd;\n\t\t\t}\n\t\t\tif (mm < 10) {\n\t\t\t\tmm = '0' + mm;\n\t\t\t}\n\t\t\treturn mm + '.' + dd + '.' + yyyy;\n\t\t},\n\t\tonUpload: function (e) {\n\t\t\tthis._import(e.getParameter(\"files\") && e.getParameter(\"files\")[0]);\n\t\t},\n\t\tonPressHandleSecureOkPopup: function(){\n\t\t\tvar sValues = this.localModel.getProperty(\"/newEntry\");\n\t\t\tif(sValues.Cost === 0 || sValues.Cost === \"\" || sValues.Material === \"\" || sValues.Collector === \"\" || sValues.Location === \"\"){\n\t\t\t\tMessageBox.error(\"Please enter valid value\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar clonedData = JSON.parse(JSON.stringify(sValues));\n\t\t\tclonedData.Enddate =  new Date(clonedData.Enddate);\n\t\t\tif(this.editPath){\n\t\t\t\tclonedData.Units = \"U\";\n\t\t\t\tthis.localModel.setProperty(this.editPath, clonedData);\n\t\t\t\tthis.editPath = \"\";\n\t\t\t}else{\n\t\t\t\tvar aData = this.localModel.getProperty(\"/data\");\n\t\t\t\taData.splice(0, 0, clonedData);\n\t\t\t\tthis.localModel.setProperty(\"/data\", aData);\n\t\t\t}\n\t\t\tthis._oDialogSecure.close();\n\t\t},\n\t\tonEdit: function(oEvent){\n\t\t\tthis.editPath = oEvent.getSource().getParent().getParent().getBindingContextPath();\n\t\t\tthis.localModel.setProperty(\"/newEntry\", this.localModel.getProperty(this.editPath));\n\t\t\tif (!this._oDialogSecure) {\n\t\t\t\tthis._oDialogSecure = sap.ui.xmlfragment(\"Secure_Dialog\", \"demo.app.excelZUIExcel.fragments.createEntry\", this);\n\t\t\t\tthis.getView().addDependent(this._oDialogSecure);\n\t\t\t}\n\t\t\t//jQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this._oDialogSecure);\n\t\t\tthis._oDialogSecure.open();\n\t\t},\n\t\tonDelete: function(oEvent){\n\t\t\tthis.editPath = oEvent.getSource().getParent().getParent().getBindingContextPath();\n\t\t\tvar record = this.localModel.getProperty(this.editPath);\n\t\t\trecord.Units = \"D\";\n\t\t\tthis.localModel.setProperty(this.editPath, record);\n\t\t\tthis.getView().byId(\"idTable\").getBinding(\"items\").filter([new sap.ui.model.Filter(\"Units\", \"NE\", \"D\")]);\n\t\t},\n\t\tonPressHandleSecureCancelPopup: function(){\n\t\t\tthis._oDialogSecure.close();\n\t\t},\n\t\t\n\t\tonAddExcelData: function() {\n\t\t\t//This code was generated by the layout editor.\n\t\t\tvar that = this;\n\t\t\t//Step 1: Create a popup object as a global variable\n\t\t\tif (this.fixedDialog === undefined) {\n\t\t\t\tthis.fixedDialog = new Dialog({\n\t\t\t\t\ttitle: \"Choose XSLX File For Upload\",\n\t\t\t\t\twidth: \"60%\",\n\t\t\t\t\tbeginButton: new sap.m.Button({\n\t\t\t\t\t\ttext: \"Close\",\n\t\t\t\t\t\tpress: function(oEvent) {\n\t\t\t\t\t\t\tthat.fixedDialog.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew FileUploader(\"excelUploader\",{\n\t\t\t\t\t\t\tfileType: \"XLSX,xlsx\",\n\t\t\t\t\t\t\tchange: [this.onUpload, this],\n\t\t\t\t\t\t\tclass: \"sapUiLargeMargin\"\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tthis.getView().addDependent(this.fixedDialog);\n\t\t\t}\n\t\t\t//Step 2: Launch the popup\n\t\t\tthis.fixedDialog.open();\n\t\t},\n\t\tformatDate: function(endDate){\n\t\t\tvar x = new Date(endDate);\n\t\t\tvar mon = ('0' + (x.getMonth()+1)).slice(-2);\n\t\t\tvar day = ('0' + x.getDate()).slice(-2);\n\t\t\tvar year = x.getFullYear();\n\t\t\treturn year + mon + day;\n\t\t},\n\t\tonSearch: function(oEvent){\n\t\t\tvar search = oEvent.getParameter(\"query\");\n\t\t\tvar oFilter1 = new sap.ui.model.Filter(\"Location\", sap.ui.model.FilterOperator.Contains, search);\n\t\t\tvar oFilter2 = new sap.ui.model.Filter(\"Material\", sap.ui.model.FilterOperator.Contains, search);\n\t\t\tvar oFilter = new sap.ui.model.Filter({\n\t\t\t\tfilters: [oFilter1, oFilter2],\n\t\t\t\tand: false\n\t\t\t});\n\t\t\tthis.getView().byId(\"idTable\").getBinding(\"items\").filter([oFilter]);\n\t\t},\n\t\t_oDialogSecure: null,\n\t\tonAdd: function(oEvent){\n\t\t\tif (!this._oDialogSecure) {\n\t\t\t\tthis._oDialogSecure = sap.ui.xmlfragment(\"Secure_Dialog\", \"demo.app.excelZUIExcel.fragments.createEntry\", this);\n\t\t\t\tthis.getView().addDependent(this._oDialogSecure);\n\t\t\t}\n\t\t\tvar newEntry = {\n\t\t\t\t\tGuid : \"\",\n\t\t\t\t\tLocation:\"\",\n\t\t\t\t\tCollector:\"\",\n\t\t\t\t\tMaterial:\"\",\n\t\t\t\t\tEnddate: new Date(),\n\t\t\t\t\tQuantity:0,\n\t\t\t\t\tCost:0,\n\t\t\t\t\tLaborcost:0,\n\t\t\t\t\tEmissioncost:0,\n\t\t\t\t\tAvgcost:0,\n\t\t\t\t\tUnits: \"\"\n\t\t\t\t};\n\t\t\tthis.localModel.setProperty(\"/newEntry\", newEntry);\n\t\t\t//jQuery.sap.syncStyleClass(\"sapUiSizeCompact\", this.getView(), this._oDialogSecure);\n\t\t\tthis._oDialogSecure.open();\n\t\t},\n\t\tonSave: function(){\n\t\t\tvar xData = this.localModel.getProperty(\"/data\");\n\t\t\tvar aData = JSON.parse(JSON.stringify(xData));\n\t\t\tdebugger;\n\t\t\tfor(var i = 0;i<aData.length;i++){\n\t\t\t\taData[i].Enddate = this.formatDate(aData[i].Enddate);\n\t\t\t}\n\t\t\t//var base64Str = Buffer.from(JSON.stringify(aData)).toString(\"base64\");\n\t\t\tvar base64Str = btoa(decodeURIComponent(JSON.stringify(aData)));\n\t\t\tvar payload = {Key : \"PST\", Value : base64Str};\n\t\t\tthis.getView().getModel().create(\"/CollectorSet\", payload,{\n\t\t\t\tsuccess: function(){\n\t\t\t\t\tMessageToast.show(\"Data has been saved to SAP system\");\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t_import: function (file) {\n\t\t\tvar that = this;\n\t\t\tvar excelData = {};\n\t\t\tif (file && window.FileReader) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function (e) {\n\t\t\t\t\tvar data = e.target.result;\n\t\t\t\t\tvar workbook = XLSX.read(data, {\n\t\t\t\t\t\ttype: 'binary'\n\t\t\t\t\t});\n\t\t\t\t\tworkbook.SheetNames.forEach(function (sheetName) {\n\t\t\t\t\t\t// Here is your object for every sheet in workbook\n\t\t\t\t\t\texcelData = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n\n\t\t\t\t\t});\n\t\t\t\t\tfor (var i=0; i<excelData.length; i++) {\n\t\t\t\t\t\texcelData[i].Avgcost = parseFloat(( parseInt(excelData[i].Cost)   + parseInt(excelData[i].Laborcost)  + parseInt(excelData[i].Emissioncost) ) / parseInt(excelData[i].Quantity)).toFixed(2);                         \n\t\t\t\t\t\texcelData[i].Units = \"N\";\n\t\t\t\t\t}\n\t\t\t\t\t// Setting the data to the local model \n\t\t\t\t\tthat.localModel.setData({\n\t\t\t\t\t\tdata: JSON.parse(JSON.stringify(excelData)),\n\t\t\t\t\t\tnewEntry: {\n\t\t\t\t\t\t\tLocation:\"\",\n\t\t\t\t\t\t\tCollector:\"\",\n\t\t\t\t\t\t\tMaterial:\"\",\n\t\t\t\t\t\t\tEndDate: new Date(),\n\t\t\t\t\t\t\tQuantity:0,\n\t\t\t\t\t\t\tCost:0,\n\t\t\t\t\t\t\tLaborCost:0,\n\t\t\t\t\t\t\tEmissionCost:0,\n\t\t\t\t\t\t\tAvgCost:0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthat.localModel.refresh(true);\n\t\t\t\t};\n\t\t\t\treader.onerror = function (ex) {\n\t\t\t\t\tconsole.log(ex);\n\t\t\t\t};\n\t\t\t\treader.readAsBinaryString(file);\n\t\t\t\tthis.fixedDialog.close();\n\t\t\t}\n\t\t}\n\t});\n});",
		"demo/app/excelZUIExcel/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"demo/app/excelZUIExcel/model/models\"\n], function(UIComponent, Device, models) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"demo.app.excelZUIExcel.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t}\n\t});\n});",
		"demo/app/excelZUIExcel/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});",
		"demo/app/excelZUIExcel/fragments/popup.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\">\n\t<SelectDialog multiSelect=\"true\" search=\"onPopupSearch\" confirm=\"onSelectValue\">\n\t</SelectDialog>\n</core:FragmentDefinition>",
		"demo/app/excelZUIExcel/fragments/createEntry.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\">\r\n\t<Dialog title=\"Add New Material\" contentHeight=\"auto\" contentWidth=\"auto\" busyIndicatorDelay=\"0\">\r\n\t\t<content>\r\n\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"secureDetailsForm\"\r\n\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\">\r\n\t\t\t\t<f:content>\r\n\t\t\t\t\t<Label text=\"Location\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Location}\" valueLiveUpdate=\"true\"/>\r\n\t\t\t\t\t<Label text=\"Collector\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Collector}\" valueLiveUpdate=\"true\"/>\r\n\t\t\t        <Label text=\"Material\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Material}\" valueLiveUpdate=\"true\"/>\r\n\t\t\t        <Label text=\"EndDate\" required=\"true\"/>\r\n\t\t\t        <DatePicker id=\"inqDate\" \r\n                \t\t\t\tdisplayFormat=\"MM/dd/yyyy\" dateValue=\"{local>/newEntry/Enddate}\" ></DatePicker>\r\n\t\t\t        <Label text=\"Quantity\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Quantity}\" type=\"Number\" valueLiveUpdate=\"true\"/>\r\n\t\t\t        <Label text=\"Cost\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Cost}\" type=\"Number\" valueLiveUpdate=\"true\" liveChange=\"onLiveChange\"/>\r\n\t\t\t        <Label text=\"Labor Cost\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Laborcost}\" type=\"Number\" valueLiveUpdate=\"true\" liveChange=\"onLiveChange\"/>\r\n\t\t\t        <Label text=\"Emission Cost\" required=\"true\"/>\r\n\t\t\t        <Input value=\"{local>/newEntry/Emissioncost}\" type=\"Number\" valueLiveUpdate=\"true\" liveChange=\"onLiveChange\"/>\r\n\t\t\t        <Label text=\"Emission Cost\" required=\"true\"/>\r\n\t\t\t        <Text text=\"{local>/newEntry/Avgcost}\"/>\r\n\t\t\t\t</f:content>\r\n\t\t\t</f:SimpleForm>\r\n\t\t</content>\r\n\t\t<buttons>\r\n\t\t\t<Button text=\"Create\" press=\"onPressHandleSecureOkPopup\"/>\r\n\t\t\t<Button text=\"Cancel\" press=\"onPressHandleSecureCancelPopup\"/>\r\n\t\t</buttons>\r\n\t</Dialog>\t\r\n</core:FragmentDefinition>"
	}
});